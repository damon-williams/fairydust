services:
  postgres:
    image: postgres:16-alpine
    command: postgres -c log_min_messages=fatal
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fairydust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  identity:
    build:
      context: .
      dockerfile: services/identity/Dockerfile
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fairydust
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
      JWT_SECRET_KEY: dev-secret-key-change-in-production
      ALLOWED_ORIGINS: "*,null,file://,http://localhost:3000,http://127.0.0.1:3000"
      SMTP_HOST: smtp.resend.com
      SMTP_PORT: 587
      SMTP_USERNAME: resend
      SMTP_PASSWORD: re_PZTPM7q1_GCXmm64oNusGgUdfYAAVVSbT
      FROM_EMAIL: noreply@fairydust.fun
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/identity:/app
      - ./shared:/app/shared

  ledger:
    build:
      context: .
      dockerfile: services/ledger/Dockerfile
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fairydust
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
      JWT_SECRET_KEY: dev-secret-key-change-in-production
      ALLOWED_ORIGINS: "*,null,file://,http://localhost:3000,http://127.0.0.1:3000"
      IDENTITY_SERVICE_URL: http://identity:8001
      APPS_SERVICE_URL: http://apps:8003
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      identity:
        condition: service_started
      apps:
        condition: service_started
    volumes:
      - ./services/ledger:/app
      - ./shared:/app/shared

  apps:
    build:
      context: .
      dockerfile: services/apps/Dockerfile
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fairydust
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
      JWT_SECRET_KEY: dev-secret-key-change-in-production
      IDENTITY_SERVICE_URL: http://identity:8001
      LEDGER_SERVICE_URL: http://ledger:8002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      identity:
        condition: service_started
    volumes:
      - ./services/apps:/app
      - ./shared:/app/shared

  admin:
    build:
      context: .
      dockerfile: services/admin/Dockerfile
    ports:
      - "8004:8003"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fairydust
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
      JWT_SECRET_KEY: dev-secret-key-change-in-production
      IDENTITY_SERVICE_URL: http://identity:8001
      ALLOWED_ORIGINS: "*,null,file://,http://localhost:3000,http://127.0.0.1:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      identity:
        condition: service_started
    volumes:
      - ./services/admin:/app
      - ./shared:/app/shared

  builder:
    build:
      context: .
      dockerfile: services/builder/Dockerfile
    ports:
      - "8005:8005"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fairydust
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
      JWT_SECRET_KEY: dev-secret-key-change-in-production
      IDENTITY_SERVICE_URL: http://identity:8001
      ALLOWED_ORIGINS: "*,null,file://,http://localhost:3000,http://127.0.0.1:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      identity:
        condition: service_started
    volumes:
      - ./services/builder:/app
      - ./shared:/app/shared

volumes:
  postgres_data:
  redis_data: